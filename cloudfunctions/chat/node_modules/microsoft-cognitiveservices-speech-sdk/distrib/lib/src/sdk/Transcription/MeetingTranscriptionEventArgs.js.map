{"version":3,"sources":["src/sdk/Transcription/MeetingTranscriptionEventArgs.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;;;;;;;;;;;;;;AAElC,sCAA2E;AAE3E;;;GAGG;AACH;IAAmD,iDAAoB;IAGnE;;;;;;OAMG;IACH,uCAAmB,MAA+B,EAAE,MAAe,EAAE,SAAkB;QAAvF,YACI,kBAAM,MAAM,EAAE,SAAS,CAAC,SAG3B;QADG,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;;IAC7B,CAAC;IASD,sBAAW,iDAAM;QAPjB;;;;;;WAMG;aACH;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IACL,oCAAC;AAAD,CA1BA,AA0BC,CA1BkD,8BAAoB,GA0BtE;AA1BY,sEAA6B","file":"MeetingTranscriptionEventArgs.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"../Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class MeetingTranscriptionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member MeetingTranscriptionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/*\r\n * Copyright 2016, Joyent, Inc. All rights reserved.\r\n * Author: Alex Wilson <alex.wilson@joyent.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n*/\r\n\r\nmodule.exports = {\r\n\tgetPass: getPass\r\n};\r\n\r\nconst mod_tty = require('tty');\r\nconst mod_fs = require('fs');\r\nconst mod_assert = require('assert-plus');\r\n\r\nvar BACKSPACE = String.fromCharCode(127);\r\nvar CTRLC = '\\u0003';\r\nvar CTRLD = '\\u0004';\r\n\r\nfunction getPass(opts, cb) {\r\n\tif (typeof (opts) === 'function' && cb === undefined) {\r\n\t\tcb = opts;\r\n\t\topts = {};\r\n\t}\r\n\tmod_assert.object(opts, 'options');\r\n\tmod_assert.func(cb, 'callback');\r\n\r\n\tmod_assert.optionalString(opts.prompt, 'options.prompt');\r\n\tif (opts.prompt === undefined)\r\n\t\topts.prompt = 'Password';\r\n\r\n\topenTTY(function (err, rfd, wfd, rtty, wtty) {\r\n\t\tif (err) {\r\n\t\t\tcb(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twtty.write(opts.prompt + ':');\r\n\t\trtty.resume();\r\n\t\trtty.setRawMode(true);\r\n\t\trtty.resume();\r\n\t\trtty.setEncoding('utf8');\r\n\r\n\t\tvar pw = '';\r\n\t\trtty.on('data', onData);\r\n\r\n\t\tfunction onData(data) {\r\n\t\t\tvar str = data.toString('utf8');\r\n\t\t\tfor (var i = 0; i < str.length; ++i) {\r\n\t\t\t\tvar ch = str[i];\r\n\t\t\t\tswitch (ch) {\r\n\t\t\t\tcase '\\r':\r\n\t\t\t\tcase '\\n':\r\n\t\t\t\tcase CTRLD:\r\n\t\t\t\t\tcleanup();\r\n\t\t\t\t\tcb(null, pw);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase CTRLC:\r\n\t\t\t\t\tcleanup();\r\n\t\t\t\t\tcb(new Error('Aborted'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase BACKSPACE:\r\n\t\t\t\t\tpw = pw.slice(0, pw.length - 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpw += ch;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction cleanup() {\r\n\t\t\twtty.write('\\r\\n');\r\n\t\t\trtty.setRawMode(false);\r\n\t\t\trtty.pause();\r\n\t\t\trtty.removeListener('data', onData);\r\n\t\t\tif (wfd !== undefined && wfd !== rfd) {\r\n\t\t\t\twtty.end();\r\n\t\t\t\tmod_fs.closeSync(wfd);\r\n\t\t\t}\r\n\t\t\tif (rfd !== undefined) {\r\n\t\t\t\trtty.end();\r\n\t\t\t\tmod_fs.closeSync(rfd);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction openTTY(cb) {\r\n\tmod_fs.open('/dev/tty', 'r+', function (err, rttyfd) {\r\n\t\tif ((err && (err.code === 'ENOENT' || err.code === 'EACCES')) ||\r\n\t\t    (process.version.match(/^v0[.][0-8][.]/))) {\r\n\t\t\tcb(null, undefined, undefined, process.stdin,\r\n\t\t\t    process.stdout);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar rtty = new mod_tty.ReadStream(rttyfd);\r\n\t\tmod_fs.open('/dev/tty', 'w+', function (err3, wttyfd) {\r\n\t\t\tvar wtty = new mod_tty.WriteStream(wttyfd);\r\n\t\t\tif (err3) {\r\n\t\t\t\tcb(err3);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcb(null, rttyfd, wttyfd, rtty, wtty);\r\n\t\t});\r\n\t});\r\n}\r\n"]}
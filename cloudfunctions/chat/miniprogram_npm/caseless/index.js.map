{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["function Caseless (dict) {\r\n  this.dict = dict || {}\r\n}\r\nCaseless.prototype.set = function (name, value, clobber) {\r\n  if (typeof name === 'object') {\r\n    for (var i in name) {\r\n      this.set(i, name[i], value)\r\n    }\r\n  } else {\r\n    if (typeof clobber === 'undefined') clobber = true\r\n    var has = this.has(name)\r\n\r\n    if (!clobber && has) this.dict[has] = this.dict[has] + ',' + value\r\n    else this.dict[has || name] = value\r\n    return has\r\n  }\r\n}\r\nCaseless.prototype.has = function (name) {\r\n  var keys = Object.keys(this.dict)\r\n    , name = name.toLowerCase()\r\n    ;\r\n  for (var i=0;i<keys.length;i++) {\r\n    if (keys[i].toLowerCase() === name) return keys[i]\r\n  }\r\n  return false\r\n}\r\nCaseless.prototype.get = function (name) {\r\n  name = name.toLowerCase()\r\n  var result, _key\r\n  var headers = this.dict\r\n  Object.keys(headers).forEach(function (key) {\r\n    _key = key.toLowerCase()\r\n    if (name === _key) result = headers[key]\r\n  })\r\n  return result\r\n}\r\nCaseless.prototype.swap = function (name) {\r\n  var has = this.has(name)\r\n  if (has === name) return\r\n  if (!has) throw new Error('There is no header than matches \"'+name+'\"')\r\n  this.dict[name] = this.dict[has]\r\n  delete this.dict[has]\r\n}\r\nCaseless.prototype.del = function (name) {\r\n  var has = this.has(name)\r\n  return delete this.dict[has || name]\r\n}\r\n\r\nmodule.exports = function (dict) {return new Caseless(dict)}\r\nmodule.exports.httpify = function (resp, headers) {\r\n  var c = new Caseless(headers)\r\n  resp.setHeader = function (key, value, clobber) {\r\n    if (typeof value === 'undefined') return\r\n    return c.set(key, value, clobber)\r\n  }\r\n  resp.hasHeader = function (key) {\r\n    return c.has(key)\r\n  }\r\n  resp.getHeader = function (key) {\r\n    return c.get(key)\r\n  }\r\n  resp.removeHeader = function (key) {\r\n    return c.del(key)\r\n  }\r\n  resp.headers = c.dict\r\n  return c\r\n}\r\n"]}
{"version":3,"sources":["delayed_stream.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["var Stream = require('stream').Stream;\r\nvar util = require('util');\r\n\r\nmodule.exports = DelayedStream;\r\nfunction DelayedStream() {\r\n  this.source = null;\r\n  this.dataSize = 0;\r\n  this.maxDataSize = 1024 * 1024;\r\n  this.pauseStream = true;\r\n\r\n  this._maxDataSizeExceeded = false;\r\n  this._released = false;\r\n  this._bufferedEvents = [];\r\n}\r\nutil.inherits(DelayedStream, Stream);\r\n\r\nDelayedStream.create = function(source, options) {\r\n  var delayedStream = new this();\r\n\r\n  options = options || {};\r\n  for (var option in options) {\r\n    delayedStream[option] = options[option];\r\n  }\r\n\r\n  delayedStream.source = source;\r\n\r\n  var realEmit = source.emit;\r\n  source.emit = function() {\r\n    delayedStream._handleEmit(arguments);\r\n    return realEmit.apply(source, arguments);\r\n  };\r\n\r\n  source.on('error', function() {});\r\n  if (delayedStream.pauseStream) {\r\n    source.pause();\r\n  }\r\n\r\n  return delayedStream;\r\n};\r\n\r\nObject.defineProperty(DelayedStream.prototype, 'readable', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this.source.readable;\r\n  }\r\n});\r\n\r\nDelayedStream.prototype.setEncoding = function() {\r\n  return this.source.setEncoding.apply(this.source, arguments);\r\n};\r\n\r\nDelayedStream.prototype.resume = function() {\r\n  if (!this._released) {\r\n    this.release();\r\n  }\r\n\r\n  this.source.resume();\r\n};\r\n\r\nDelayedStream.prototype.pause = function() {\r\n  this.source.pause();\r\n};\r\n\r\nDelayedStream.prototype.release = function() {\r\n  this._released = true;\r\n\r\n  this._bufferedEvents.forEach(function(args) {\r\n    this.emit.apply(this, args);\r\n  }.bind(this));\r\n  this._bufferedEvents = [];\r\n};\r\n\r\nDelayedStream.prototype.pipe = function() {\r\n  var r = Stream.prototype.pipe.apply(this, arguments);\r\n  this.resume();\r\n  return r;\r\n};\r\n\r\nDelayedStream.prototype._handleEmit = function(args) {\r\n  if (this._released) {\r\n    this.emit.apply(this, args);\r\n    return;\r\n  }\r\n\r\n  if (args[0] === 'data') {\r\n    this.dataSize += args[1].length;\r\n    this._checkIfMaxDataSizeExceeded();\r\n  }\r\n\r\n  this._bufferedEvents.push(args);\r\n};\r\n\r\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\r\n  if (this._maxDataSizeExceeded) {\r\n    return;\r\n  }\r\n\r\n  if (this.dataSize <= this.maxDataSize) {\r\n    return;\r\n  }\r\n\r\n  this._maxDataSizeExceeded = true;\r\n  var message =\r\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\r\n  this.emit('error', new Error(message));\r\n};\r\n"]}
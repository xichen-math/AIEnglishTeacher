{"version":3,"sources":["index.js","functionCall.js","actualApply.js","functionApply.js","reflectApply.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,AFMA;AELA,ACHA,AHSA;AELA,ACHA,AHSA;AELA,ACHA,AHSA;AELA,ACHA,AHSA,AIZA;AFOA,ACHA,AHSA,AIZA;AFOA,AFMA,AIZA;AFOA,AFMA,AIZA;AFOA,AENA","file":"index.js","sourcesContent":["\r\n\r\nvar bind = require('function-bind');\r\nvar $TypeError = require('es-errors/type');\r\n\r\nvar $call = require('./functionCall');\r\nvar $actualApply = require('./actualApply');\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function callBindBasic(args) {\r\n\tif (args.length < 1 || typeof args[0] !== 'function') {\r\n\t\tthrow new $TypeError('a function is required');\r\n\t}\r\n\treturn $actualApply(bind, $call, args);\r\n};\r\n","\r\n\r\n/** @type {import('./functionCall')} */\r\nmodule.exports = Function.prototype.call;\r\n","\r\n\r\nvar bind = require('function-bind');\r\n\r\nvar $apply = require('./functionApply');\r\nvar $call = require('./functionCall');\r\nvar $reflectApply = require('./reflectApply');\r\n\r\n/** @type {import('./actualApply')} */\r\nmodule.exports = $reflectApply || bind.call($call, $apply);\r\n","\r\n\r\n/** @type {import('./functionApply')} */\r\nmodule.exports = Function.prototype.apply;\r\n","\r\n\r\n/** @type {import('./reflectApply')} */\r\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\r\n"]}